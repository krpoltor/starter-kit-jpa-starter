package com.capgemini.generated.entities;
// Generated Aug 17, 2016 9:06:50 AM by Hibernate Tools 4.3.1.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Division generated by hbm2java
 */
@Entity
@Table(name = "division", catalog = "starterkit_jpa", uniqueConstraints = @UniqueConstraint(columnNames = "name") )
public class DivisionEntity implements java.io.Serializable {

	private Integer id;
	private ContactDataEntity contactData;
	private String name;
	private Set<EmployeeEntity> employees = new HashSet<EmployeeEntity>(0);

	public DivisionEntity() {
	}

	public DivisionEntity(ContactDataEntity contactData, String name) {
		this.contactData = contactData;
		this.name = name;
	}

	public DivisionEntity(ContactDataEntity contactData, String name, Set<EmployeeEntity> employees) {
		this.contactData = contactData;
		this.name = name;
		this.employees = employees;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "Contact_Data_type", referencedColumnName = "type", nullable = false),
			@JoinColumn(name = "Contact_Data_id", referencedColumnName = "id", nullable = false) })
	public ContactDataEntity getContactData() {
		return this.contactData;
	}

	public void setContactData(ContactDataEntity contactData) {
		this.contactData = contactData;
	}

	@Column(name = "name", unique = true, nullable = false, length = 45)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "division")
	public Set<EmployeeEntity> getEmployees() {
		return this.employees;
	}

	public void setEmployees(Set<EmployeeEntity> employees) {
		this.employees = employees;
	}

}
